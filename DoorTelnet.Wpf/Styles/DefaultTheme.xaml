<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- System menu overrides to force dark dropdown background / light text -->
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey}" Color="#262A30" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuBarBrushKey}" Color="#232323" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuHighlightBrushKey}" Color="#2F343C" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey}" Color="#FFFFFF" />
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FFFFFF" />

    <!-- Colors -->
    <Color x:Key="Color.Background">#1B1B1B</Color>
    <Color x:Key="Color.Panel">#232323</Color>
    <Color x:Key="Color.Border">#3C3C3C</Color>
    <Color x:Key="Color.Accent">#1185E6</Color>
    <Color x:Key="Color.AccentLight">#25A0FF</Color>
    <Color x:Key="Color.Text">#FFFFFF</Color>
    <Color x:Key="Color.TextMuted">#B7B7B7</Color>
    <Color x:Key="Color.MenuHover">#2F343C</Color>
    <Color x:Key="Color.MenuPressed">#0764A8</Color>
    <Color x:Key="Color.PopupBg">#262A30</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="Brush.Background" Color="{StaticResource Color.Background}" />
    <SolidColorBrush x:Key="Brush.Panel" Color="{StaticResource Color.Panel}" />
    <SolidColorBrush x:Key="Brush.Border" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="Brush.Accent" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="Brush.AccentLight" Color="{StaticResource Color.AccentLight}" />
    <SolidColorBrush x:Key="Brush.Text" Color="{StaticResource Color.Text}" />
    <SolidColorBrush x:Key="Brush.TextMuted" Color="{StaticResource Color.TextMuted}" />
    <SolidColorBrush x:Key="Brush.MenuHover" Color="{StaticResource Color.MenuHover}" />
    <SolidColorBrush x:Key="Brush.MenuPressed" Color="{StaticResource Color.MenuPressed}" />
    <SolidColorBrush x:Key="Brush.PopupBg" Color="{StaticResource Color.PopupBg}" />

    <!-- Typography -->
    <FontFamily x:Key="Font.Mono">Consolas, 'Cascadia Mono', 'Courier New'</FontFamily>
    <FontFamily x:Key="Font.UI">Segoe UI</FontFamily>

    <!-- Button Style -->
    <Style TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}" />
        <Setter Property="Background" Value="{StaticResource Brush.Panel}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Accent}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.AccentLight}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dark MenuItem Style with explicit template -->
    <Style x:Key="DarkMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}" />
        <Setter Property="FontFamily" Value="{StaticResource Font.UI}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="Bd" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="3" Padding="{TemplateBinding Padding}">
                            <DockPanel>
                                <!-- Arrow for submenu items -->
                                <Path x:Name="Arrow" Width="8" Height="8" Stretch="Uniform" Margin="4,0,0,0" Fill="{StaticResource Brush.Text}" Data="M 0 0 L 4 4 L 0 8 Z" Visibility="Collapsed" DockPanel.Dock="Right" />
                                <ContentPresenter x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" />
                            </DockPanel>
                        </Border>
                        <Popup x:Name="PART_Popup" Placement="Bottom" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                            <Border Background="{StaticResource Brush.PopupBg}" BorderBrush="{StaticResource Brush.Border}" BorderThickness="1" CornerRadius="4" Padding="2" SnapsToDevicePixels="True">
                                <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" MaxHeight="480">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter TargetName="PART_Popup" Property="Popup.Placement" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter TargetName="PART_Popup" Property="Popup.Placement" Value="Right" />
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible" />
                            <Setter Property="Padding" Value="20,4" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.MenuHover}" />
                        </Trigger>
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.MenuHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.MenuPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Brush.TextMuted}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource Brush.TextMuted}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Menu / MenuItem Styles -->
    <Style TargetType="Menu">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}" />
        <Setter Property="Background" Value="{StaticResource Brush.Panel}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="FontFamily" Value="{StaticResource Font.UI}" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <!-- Top-level & submenu items (no custom template override to preserve default popup) -->
    <Style TargetType="MenuItem">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="{StaticResource Font.UI}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Margin" Value="2,0" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Padding" Value="20,4" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush.MenuHover}" />
                <Setter Property="Foreground" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush.MenuHover}" />
                <Setter Property="Foreground" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush.MenuPressed}" />
                <Setter Property="Foreground" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Brush.TextMuted}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Popup styling (context & submenu) -->
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{StaticResource Brush.PopupBg}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DarkMenuItemStyle}" />
    </Style>

    <!-- StatusBar -->
    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{StaticResource Brush.Panel}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.TextMuted}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="BorderThickness" Value="1,1,0,0" />
        <Setter Property="Padding" Value="4,2" />
    </Style>

    <!-- Border Panel Style -->
    <Style x:Key="PanelBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.Panel}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!-- TextBlock default -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}" />
        <Setter Property="FontFamily" Value="{StaticResource Font.UI}" />
    </Style>

    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <Style x:Key="MiniDirStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="#CCCCCC"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <!-- Direction cell represented by ContentControl so we can template -->
    <Style x:Key="DirCellStyle" TargetType="ContentControl">
        <Setter Property="Width" Value="46"/>
        <Setter Property="Height" Value="44"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="ToolTipService.ShowDuration" Value="60000"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ContentControl">
              <Border x:Name="bd" CornerRadius="4" BorderThickness="1" Padding="2" Background="#262626" BorderBrush="#444">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <TextBlock Text="{Binding Abbrev}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" />
                  <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center" Margin="0,2,0,0">
                    <Ellipse Width="6" Height="6" Fill="#F55" Visibility="{Binding HasAggressive, Converter={StaticResource BoolToVisibilityConverter}}" Margin="2,0"/>
                    <Ellipse Width="6" Height="6" Fill="#FFA500" Visibility="{Binding HasMonsters, Converter={StaticResource BoolToVisibilityConverter}}" Margin="2,0"/>
                    <Ellipse Width="6" Height="6" Fill="#4CAF50" Visibility="{Binding HasItems, Converter={StaticResource BoolToVisibilityConverter}}" Margin="2,0"/>
                  </StackPanel>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding IsKnown}" Value="False">
                  <Setter TargetName="bd" Property="Opacity" Value="0.35"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MonsterCount}" Value="0">
                  <Setter TargetName="bd" Property="BorderBrush" Value="#333"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding HasAggressive}" Value="True">
                  <Setter TargetName="bd" Property="BorderBrush" Value="#AA3333"/>
                  <Setter TargetName="bd" Property="Background" Value="#331818"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding HasMonsters}" Value="True">
                  <Setter TargetName="bd" Property="BorderBrush" Value="#666633"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding HasItems}" Value="True">
                  <Setter TargetName="bd" Property="Background" Value="#283328"/>
                </DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CenterCellStyle" TargetType="Border">
        <Setter Property="Background" Value="#303030"/>
        <Setter Property="BorderBrush" Value="#777"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="54"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
</ResourceDictionary>
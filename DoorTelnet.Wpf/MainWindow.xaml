<Window x:Class="DoorTelnet.Wpf.MainWindow"
        x:Name="RootWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:DoorTelnet.Wpf.Controls"
        xmlns:views="clr-namespace:DoorTelnet.Wpf.Views"
        mc:Ignorable="d"
        Title="DoorTelnet" Height="650" Width="1150" MinWidth="900" MinHeight="550"
        Icon="Resources/app_icon.ico"
        Background="{StaticResource Brush.Background}">
    <DockPanel>
        <!-- Top bar with menu and connect button (stats panel removed) -->
        <Border DockPanel.Dock="Top" Background="{StaticResource Brush.Panel}" BorderBrush="{StaticResource Brush.Border}" BorderThickness="0,0,0,1" Padding="2" SnapsToDevicePixels="True">
            <DockPanel LastChildFill="True">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="4,0,0,0">
                    <Button x:Name="UserButton" Width="80" Margin="0,0,8,0" Content="{Binding CurrentUserButtonText}" MouseRightButtonUp="UserButton_MouseRightButtonUp" Click="UserButton_Click">
                        <Button.ContextMenu>
                            <ContextMenu ItemsSource="{Binding UserMenuItems}">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding Name}"/>
                                        <Setter Property="IsCheckable" Value="True"/>
                                        <Setter Property="IsChecked" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                        <Setter Property="Command" Value="{Binding DataContext.SelectUserCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding Name}"/>
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </Button.ContextMenu>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
                                <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="6,3"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Brush.AccentLight}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <ToggleButton x:Name="AutoGongToggle" Width="130" Margin="0,0,8,0" IsChecked="{Binding AutoGong, Mode=TwoWay}" Content="{Binding AutoGongButtonText}" Click="AutoGongToggle_Click"
                                  ToolTip="{Binding AutoGongTooltip}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
                                <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="6,3"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Brush.AccentLight}"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Brush.Accent}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource Brush.AccentLight}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ToggleButton x:Name="AutoAttackToggle" Width="130" Margin="0,0,8,0" IsChecked="{Binding AutoAttack, Mode=TwoWay}" Content="{Binding AutoAttackButtonText}" Click="AutoAttackToggle_Click"
                                  ToolTip="{Binding AutoAttackTooltip}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
                                <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="6,3"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Brush.AccentLight}"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Brush.Accent}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource Brush.AccentLight}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Button x:Name="ConnectButton" Width="110" Content="{Binding ConnectButtonText}" Command="{Binding ToggleConnectionCommand}" Click="ConnectButton_Click">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
                                <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="6,3"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Brush.AccentLight}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <Menu Background="{StaticResource Brush.Panel}" BorderThickness="0" ItemContainerStyle="{StaticResource DarkMenuItemStyle}">
                    <MenuItem Header="_File">
                        <MenuItem Header="Settings" Command="{Binding ShowSettingsCommand}" />
                        <Separator />
                        <MenuItem Header="Exit" Command="{Binding ToggleConnectionCommand}" />
                    </MenuItem>
                    <MenuItem Header="_Profiles">
                        <MenuItem Header="Credentials" Command="{Binding ShowCredentialsCommand}" />
                        <MenuItem Header="Characters" Command="{Binding ShowCharactersCommand}" />
                        <MenuItem Header="Character Sheet" Command="{Binding ShowCharacterSheetCommand}" />
                    </MenuItem>
                    <MenuItem Header="_Automation">
                        <MenuItem Header="Refresh Stats" Command="{Binding Combat.RefreshStatsCommand}" />
                        <Separator />
                        <MenuItem Header="Send Username" Command="{Binding SendUsernameCommand}" />
                        <MenuItem Header="Send Password" Command="{Binding SendPasswordCommand}" />
                        <MenuItem Header="Quick Login" Command="{Binding QuickLoginCommand}" />
                        <MenuItem Header="Send Initial Data" Command="{Binding SendInitialDataCommand}" />
                        <Separator />
                        <MenuItem Header="Clear Character Data" Command="{Binding ClearCharacterDataCommand}" 
                                  ToolTip="Clears all character data including HP, XP, location, monsters, and combat info"/>
                        <Separator />
                        <MenuItem Header="Hot Keys" Command="{Binding ShowHotKeysCommand}" />
                    </MenuItem>
                    <MenuItem Header="_Help">
                        <MenuItem Header="About" />
                        <Separator />
                        <MenuItem Header="Debug">
                            <MenuItem Header="Copy Buffer w/ Colors" Command="{Binding CopyBufferWithColorsCommand}" 
                                      ToolTip="Copy the terminal screen buffer with detailed color information - useful for debugging color-based parsing" />
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </DockPanel>
        </Border>

        <!-- Status bar bottom expanded -->
        <StatusBar DockPanel.Dock="Bottom" Padding="4,2">
            <StatusBarItem>
                <TextBlock>
                    <Run Text="HP:"/>
                    <Run Text="{Binding Stats.Hp, Mode=OneWay}"/>
                    <Run Text="/"/>
                    <Run Text="{Binding Stats.MaxHp, Mode=OneWay}"/>
                    <Run Text=" ("/>
                    <Run Text="{Binding Stats.HpPercent, Mode=OneWay}"/>
                    <Run Text="%)  MP:"/>
                    <Run Text="{Binding Stats.Mp, Mode=OneWay}"/>
                    <Run Text=" MV:"/>
                    <Run Text="{Binding Stats.Mv, Mode=OneWay}"/>
                </TextBlock>
            </StatusBarItem>
            <Separator Style="{x:Null}" Width="10"/>
            <StatusBarItem>
                <TextBlock>
                    <Run Text="Char:"/>
                    <Run Text="{Binding ProfileName}"/>
                    <Run Text="  Items:"/><Run Text="{Binding InventoryCount}"/>
                    <Run Text="  Spells:"/><Run Text="{Binding SpellsCount}"/>
                    <Run Text="  Shielded:"/><Run Text="{Binding ShieldedStatus}"/>
                    <Run Text="  Hunger:"/><Run Text="{Binding HungerStatus}"/>
                    <Run Text="  Thirst:"/><Run Text="{Binding ThirstStatus}"/>
                    <Run Text="  XP:"/><Run Text="{Binding Experience}"/>
                    <Run Text="  XpLeft:"/><Run Text="{Binding XpLeft}"/>
                    <Run Text="  Weapon:"/><Run Text="{Binding ArmedWith}"/>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>

        <!-- Main layout -->
        <Grid Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7*" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <!-- Terminal full height -->
            <Border Style="{StaticResource PanelBorderStyle}" Margin="0,0,6,0" Grid.Column="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" LastChildFill="False" Margin="0,0,0,6">
                        <TextBlock Text="Terminal" FontWeight="Bold" />
                    </DockPanel>
                    <controls:TerminalControl x:Name="Terminal" Grid.Row="1" Focusable="True" />
                </Grid>
            </Border>

            <!-- Right column without separate stats panel now -->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Border Style="{StaticResource PanelBorderStyle}" Margin="0,0,0,6" Grid.Row="0">
                    <views:RoomView DataContext="{Binding Room}" />
                </Border>

                <Border Style="{StaticResource PanelBorderStyle}" Margin="0,0,0,6" Grid.Row="1">
                    <views:CombatView DataContext="{Binding Combat}" />
                </Border>

                <Border Style="{StaticResource PanelBorderStyle}" Grid.Row="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBlock Text="Session Log" FontWeight="Bold" />
                        <Border Grid.Row="1" Background="#202020" CornerRadius="2" BorderBrush="#333" BorderThickness="1" Margin="0,6,0,0">
                            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Name="LogScrollViewer">
                                <ItemsControl ItemsSource="{Binding LogVm.Entries}" Name="LogItemsControl">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Display}" Foreground="{StaticResource Brush.Text}" FontFamily="Consolas" FontSize="12" TextWrapping="Wrap" Margin="2,1"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
